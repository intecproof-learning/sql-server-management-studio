//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManejoErroresSQL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AdventureWorks2019Entities : DbContext
    {
        public AdventureWorks2019Entities()
            : base("name=AdventureWorks2019Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Errores> Errores { get; set; }
    
        public virtual ObjectResult<Nullable<int>> usp_Ocurrencia(string cadena1, string cadena2)
        {
            var cadena1Parameter = cadena1 != null ?
                new ObjectParameter("cadena1", cadena1) :
                new ObjectParameter("cadena1", typeof(string));
    
            var cadena2Parameter = cadena2 != null ?
                new ObjectParameter("cadena2", cadena2) :
                new ObjectParameter("cadena2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Ocurrencia", cadena1Parameter, cadena2Parameter);
        }
    
        [DbFunction("AdventureWorks2019Entities", "ufn_GetSalesAllClientsReport")]
        public virtual IQueryable<ufn_GetSalesAllClientsReport_Result> ufn_GetSalesAllClientsReport(Nullable<int> skip, Nullable<int> take)
        {
            var skipParameter = skip.HasValue ?
                new ObjectParameter("skip", skip) :
                new ObjectParameter("skip", typeof(int));
    
            var takeParameter = take.HasValue ?
                new ObjectParameter("take", take) :
                new ObjectParameter("take", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_GetSalesAllClientsReport_Result>("[AdventureWorks2019Entities].[ufn_GetSalesAllClientsReport](@skip, @take)", skipParameter, takeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ObtenerPaginasGetSalesAllClientsReport(Nullable<int> itemsPorPagina)
        {
            var itemsPorPaginaParameter = itemsPorPagina.HasValue ?
                new ObjectParameter("itemsPorPagina", itemsPorPagina) :
                new ObjectParameter("itemsPorPagina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ObtenerPaginasGetSalesAllClientsReport", itemsPorPaginaParameter);
        }
    
        public virtual int usp_ObtenerPaginasGetSalesAllClientsReport_V2(Nullable<int> itemsPorPagina, ObjectParameter totalItems)
        {
            var itemsPorPaginaParameter = itemsPorPagina.HasValue ?
                new ObjectParameter("itemsPorPagina", itemsPorPagina) :
                new ObjectParameter("itemsPorPagina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ObtenerPaginasGetSalesAllClientsReport_V2", itemsPorPaginaParameter, totalItems);
        }
    }
}
